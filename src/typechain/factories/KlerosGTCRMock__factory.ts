/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  KlerosGTCRMock,
  KlerosGTCRMockInterface,
} from "../KlerosGTCRMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_registrationMetaEvidence",
        type: "string",
      },
      {
        internalType: "string",
        name: "_clearingMetaEvidence",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_itemID",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_requestIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_roundIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_disputed",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_resolved",
        type: "bool",
      },
    ],
    name: "ItemStatusChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_itemID",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_submitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_evidenceGroupID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ItemSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_metaEvidenceID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_evidence",
        type: "string",
      },
    ],
    name: "MetaEvidence",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_item",
        type: "bytes",
      },
    ],
    name: "addItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_itemID",
        type: "bytes32",
      },
    ],
    name: "getItemInfo",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum KlerosGTCRMock.Status",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "numberOfRequests",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "itemIDtoIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "itemList",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "items",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum KlerosGTCRMock.Status",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_itemID",
        type: "bytes32",
      },
    ],
    name: "removeItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

export class KlerosGTCRMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _registrationMetaEvidence: string,
    _clearingMetaEvidence: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KlerosGTCRMock> {
    return super.deploy(
      _registrationMetaEvidence,
      _clearingMetaEvidence,
      overrides || {}
    ) as Promise<KlerosGTCRMock>;
  }
  getDeployTransaction(
    _registrationMetaEvidence: string,
    _clearingMetaEvidence: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _registrationMetaEvidence,
      _clearingMetaEvidence,
      overrides || {}
    );
  }
  attach(address: string): KlerosGTCRMock {
    return super.attach(address) as KlerosGTCRMock;
  }
  connect(signer: Signer): KlerosGTCRMock__factory {
    return super.connect(signer) as KlerosGTCRMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KlerosGTCRMockInterface {
    return new utils.Interface(_abi) as KlerosGTCRMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KlerosGTCRMock {
    return new Contract(address, _abi, signerOrProvider) as KlerosGTCRMock;
  }
}
