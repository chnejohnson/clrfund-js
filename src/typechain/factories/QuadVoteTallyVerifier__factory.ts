/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QuadVoteTallyVerifier,
  QuadVoteTallyVerifierInterface,
} from "../QuadVoteTallyVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[]",
        name: "input",
        type: "uint256[]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061194d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c32e370e14610030575b600080fd5b6101e2600480360361012081101561004757600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156100fc578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906100a8565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019064010000000081111561015f57600080fd5b82018360208201111561017157600080fd5b8035906020019184602083028401116401000000008311171561019357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506101fa565b60405180821515815260200191505060405180910390f35b6000610204611747565b60405180604001604052808760006002811061021c57fe5b602002015181526020018760016002811061023357fe5b60200201518152508160000181905250604051806040016040528060405180604001604052808860006002811061026657fe5b602002015160006002811061027757fe5b602002015181526020018860006002811061028e57fe5b602002015160016002811061029f57fe5b602002015181525081526020016040518060400160405280886001600281106102c457fe5b60200201516000600281106102d557fe5b60200201518152602001886001600281106102ec57fe5b60200201516001600281106102fd57fe5b6020020151815250815250816020018190525060405180604001604052808560006002811061032857fe5b602002015181526020018560016002811061033f57fe5b6020020151815250816040018190525061035761177a565b61035f610a11565b90506103696117c7565b604051806040016040528060008152602001600081525090507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478360000151600001511061041f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f76657269666965722d61582d6774652d7072696d652d7100000000000000000081525060200191505060405180910390fd5b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47836000015160200151106104bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f76657269666965722d61592d6774652d7072696d652d7100000000000000000081525060200191505060405180910390fd5b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478360200151600001516000600281106104f257fe5b60200201511061056a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f76657269666965722d6258302d6774652d7072696d652d71000000000000000081525060200191505060405180910390fd5b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478360200151602001516000600281106105a057fe5b602002015110610618576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f76657269666965722d6259302d6774652d7072696d652d71000000000000000081525060200191505060405180910390fd5b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4783602001516000015160016002811061064e57fe5b6020020151106106c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f76657269666965722d6258312d6774652d7072696d652d71000000000000000081525060200191505060405180910390fd5b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478360200151602001516001600281106106fc57fe5b602002015110610774576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f76657269666965722d6259312d6774652d7072696d652d71000000000000000081525060200191505060405180910390fd5b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4783604001516000015110610811576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f76657269666965722d63582d6774652d7072696d652d7100000000000000000081525060200191505060405180910390fd5b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47836040015160200151106108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f76657269666965722d63592d6774652d7072696d652d7100000000000000000081525060200191505060405180910390fd5b60005b600a8110156109ae577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018682815181106108e757fe5b602002602001015110610962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c640081525060200191505060405180910390fd5b61099f8261099a856080015160018501600b811061097c57fe5b602002015189858151811061098d57fe5b6020026020010151611182565b61127d565b915080806001019150506108b1565b506109ce8183608001516000600b81106109c457fe5b602002015161127d565b9050610a046109e08460000151611397565b8460200151846000015185602001518587604001518960400151896060015161144a565b9350505050949350505050565b610a1961177a565b60405180604001604052807f010edfbc2da408e74e84601953391f5366e8950f7354c3a35a58589ee13664e881526020017f143f1a83e0da1f109a6ccef7c99be841d4f435f2ed176040ac1e4286373747ee8152508160000181905250604051806040016040528060405180604001604052807f0dee97384d646761455614fb6e2140ff0f6f818b8b6458d2358bae55423e7eae81526020017f1b490affc058cb5bcee64201235dd5523c8772def980310972f0a799ea711f07815250815260200160405180604001604052807f279c1df002f7ebc6e751a3764b6cb5e533a93e72299ca44552db40bc82a8f1ef81526020017f245b1a8d7cca274acdad8e861f178cbe4116e80ae5b153be04e62624fa32fc238152508152508160200181905250604051806040016040528060405180604001604052807f0c8fbba81ab0119d49a86c777a585c7c1d2a8308f6244a7ac1165a2aadce683181526020017f1acaf75b8451931b2dc62bb06e22d9a1887587e3f211b6e6cf4e24d7284d59e4815250815260200160405180604001604052807f2a52ae9b1ee6d7b8bcc7d31bdbe4f3c79a53d786cbeba5912b9050788a09ce5581526020017f13645ff8e89f5c6edf1ec303138aad3ebc3018b4268b5496a1438130e50bdd8f8152508152508160400181905250604051806040016040528060405180604001604052807f144da526a84150d09c6cafac4d14e275d65e61ce59e4fd9d285d9f1f81d1d2f581526020017f11f4adbb10b558adcc5b6bae6229da413cc6c519b0ca2090f5f136549ac841e2815250815260200160405180604001604052807f1267dc8323b942d2456b8673f7d0d14656fac36b751aa138a99703fff36c925081526020017f15722dda674e1323cb16c7824b99431759220db37e29c21bdce381c73300c07c815250815250816060018190525060405180604001604052807f09e41cf5d1f90487d2cb74d4e7e5f2fe05356b4bd6d2c3d68badf67c897602df81526020017f0f6107e7fad81561111c0199555dba8943427047fa968962fd93bdfb1074569581525081608001516000600b8110610d2b57fe5b602002018190525060405180604001604052807f2b9cb00d4a4abfd933726b17037d8d3a6480086ebdae65e64afd6f229567a1fa81526020017f1e412199db4d287133a4f13fea7ada7eb0ecf213610fc2358a13e5830cee056581525081608001516001600b8110610d9957fe5b602002018190525060405180604001604052807f03f7454460e14f8dc58bcd563993894f2a7690bbe253dedd6b9c2c92f8abaa1b81526020017f1496c165b0cb77177b910c21af44b58070fdd738f377860dbe5e3dbf5c37340081525081608001516002600b8110610e0757fe5b602002018190525060405180604001604052807f18fb070f10dba11df4bed883cc8e68e87fd193e429a83c84c43d96b2e846ac1081526020017f12669a28642ee05b81d6fef7e3ca75438b498bf93a4a9a804729cca5995465f181525081608001516003600b8110610e7557fe5b602002018190525060405180604001604052807f1d5c8deeacd16232f816156f4ef36000b49ca6f832932a25a2f56053553a403781526020017f1517fefe3e56f5551d14aaf1916279c3b3e051d07c2453941e51bf1d70789b4381525081608001516004600b8110610ee357fe5b602002018190525060405180604001604052807f1af945d4ef02f31d393059016f0eef48264a6620b78dcb51cb5845cb0523e32381526020017f266360bc60da5454fe53ca147fa904b692c9ac64162f286ba8e6c25cafa94a0881525081608001516005600b8110610f5157fe5b602002018190525060405180604001604052807f1b8e6d8a82ca6c45113fd2a2866b7a6cde7a8e9c17b26edb0cc3d306d623fde081526020017f290f90807d0c4ec9f227a21acd9511d6550337f6d1ab9b988c5ab411b30dc22d81525081608001516006600b8110610fbf57fe5b602002018190525060405180604001604052807f21d6c5b8afa632b457197e064b8bb73dab464d3b685349f85147230ef0ce35ee81526020017f14a09454570312f9c9bc25b2984dd4c14a1d5476564bac442bb7d30b9664d8f581525081608001516007600b811061102d57fe5b602002018190525060405180604001604052807f099e619961984f8775b1102500a7484f67d60e054c0fb75f9dc6f8edb6e5682f81526020017f2e0a4baf073ba81b999dcf4a40636a056e74e2a0c93d1cb7ad87a4d1b9eea72d81525081608001516008600b811061109b57fe5b602002018190525060405180604001604052807f23fbde043748425a89304683970082696927b270b142cc0efca08335165b76d881526020017f0cb06b220491d7f70348a06bf0fe6484ac7aeaa81b414fe302ddf26726e1415881525081608001516009600b811061110957fe5b602002018190525060405180604001604052807f0a9a2d64c92468d577bee1f61bfc39c6a72755749814c2fc316661412556701f81526020017f147dcdbb917b1408d629c7a324698b90f4965cfac6ade64aad71d6bcc67061248152508160800151600a600b811061117757fe5b602002018190525090565b61118a6117c7565b6111926117e1565b8360000151816000600381106111a457fe5b6020020181815250508360200151816001600381106111bf57fe5b60200201818152505082816002600381106111d657fe5b602002018181525050600060608360808460076107d05a03fa905080600081146111ff57611201565bfe5b5080611275576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f70616972696e672d6d756c2d6661696c6564000000000000000000000000000081525060200191505060405180910390fd5b505092915050565b6112856117c7565b61128d611803565b83600001518160006004811061129f57fe5b6020020181815250508360200151816001600481106112ba57fe5b6020020181815250508260000151816002600481106112d557fe5b6020020181815250508260200151816003600481106112f057fe5b602002018181525050600060608360c08460066107d05a03fa905080600081146113195761131b565bfe5b508061138f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f70616972696e672d6164642d6661696c6564000000000000000000000000000081525060200191505060405180910390fd5b505092915050565b61139f6117c7565b600082600001511480156113b7575060008260200151145b156113da5760405180604001604052806000815260200160008152509050611445565b6040518060400160405280836000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784602001518161141c57fe5b067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd470381525090505b919050565b6000611454611825565b60405180608001604052808b815260200189815260200187815260200185815250905061147f611852565b60405180608001604052808b815260200189815260200187815260200185815250905060006018905060608167ffffffffffffffff811180156114c157600080fd5b506040519080825280602002602001820160405280156114f05781602001602082028036833780820191505090505b50905060005b600481101561167957600060068202905085826004811061151357fe5b60200201516000015183600083018151811061152b57fe5b60200260200101818152505085826004811061154357fe5b60200201516020015183600183018151811061155b57fe5b60200260200101818152505084826004811061157357fe5b60200201516000015160006002811061158857fe5b602002015183600283018151811061159c57fe5b6020026020010181815250508482600481106115b457fe5b6020020151600001516001600281106115c957fe5b60200201518360038301815181106115dd57fe5b6020026020010181815250508482600481106115f557fe5b60200201516020015160006002811061160a57fe5b602002015183600483018151811061161e57fe5b60200260200101818152505084826004811061163657fe5b60200201516020015160016002811061164b57fe5b602002015183600583018151811061165f57fe5b6020026020010181815250505080806001019150506114f6565b5061168261187f565b6000602082602086026020860160086107d05a03fa905080600081146116a7576116a9565bfe5b508061171d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f70616972696e672d6f70636f64652d6661696c6564000000000000000000000081525060200191505060405180910390fd5b60008260006001811061172c57fe5b60200201511415965050505050505098975050505050505050565b604051806060016040528061175a6117c7565b81526020016117676118a1565b81526020016117746117c7565b81525090565b6040518060a0016040528061178d6117c7565b815260200161179a6118a1565b81526020016117a76118a1565b81526020016117b46118a1565b81526020016117c16118c7565b81525090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060800160405280600490602082028036833780820191505090505090565b60405180608001604052806004905b61183c6117c7565b8152602001906001900390816118345790505090565b60405180608001604052806004905b6118696118a1565b8152602001906001900390816118615790505090565b6040518060200160405280600190602082028036833780820191505090505090565b60405180604001604052806118b46118f5565b81526020016118c16118f5565b81525090565b604051806101600160405280600b905b6118df6117c7565b8152602001906001900390816118d75790505090565b604051806040016040528060029060208202803683378082019150509050509056fea2646970667358221220c5ae0d019d5bf0481b17ac2c917c6d1ee34794ebb4f58d20c19f976e6090733c64736f6c634300060c0033";

export class QuadVoteTallyVerifier__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QuadVoteTallyVerifier> {
    return super.deploy(overrides || {}) as Promise<QuadVoteTallyVerifier>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): QuadVoteTallyVerifier {
    return super.attach(address) as QuadVoteTallyVerifier;
  }
  connect(signer: Signer): QuadVoteTallyVerifier__factory {
    return super.connect(signer) as QuadVoteTallyVerifier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QuadVoteTallyVerifierInterface {
    return new utils.Interface(_abi) as QuadVoteTallyVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QuadVoteTallyVerifier {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as QuadVoteTallyVerifier;
  }
}
