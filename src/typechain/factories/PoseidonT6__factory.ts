/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PoseidonT6, PoseidonT6Interface } from "../PoseidonT6";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "input",
        type: "uint256[5]",
      },
    ],
    name: "poseidon",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60eb610025600b82828239805160001a60731461001857fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80634937a258146038575b600080fd5b6098600480360360a0811015604c57600080fd5b810190808060a001906005806020026040519081016040528092919082600560200280828437600081840152601f19601f820116905080830192505050505050919291929050505060ae565b6040518082815260200191505060405180910390f35b600091905056fea26469706673582212209620454dabe67ab30dd56ce7b0dd2f2fbe7c5d40bc1c021c17d3cb9fbda7447364736f6c634300060c0033";

export class PoseidonT6__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoseidonT6> {
    return super.deploy(overrides || {}) as Promise<PoseidonT6>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PoseidonT6 {
    return super.attach(address) as PoseidonT6;
  }
  connect(signer: Signer): PoseidonT6__factory {
    return super.connect(signer) as PoseidonT6__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoseidonT6Interface {
    return new utils.Interface(_abi) as PoseidonT6Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoseidonT6 {
    return new Contract(address, _abi, signerOrProvider) as PoseidonT6;
  }
}
