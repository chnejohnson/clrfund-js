/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  IncrementalMerkleTree,
  IncrementalMerkleTreeInterface,
} from "../IncrementalMerkleTree";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_treeLevels",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_zeroValue",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isPreCalc",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "leaf",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "leafIndex",
        type: "uint256",
      },
    ],
    name: "LeafInsertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "array",
        type: "uint256[]",
      },
    ],
    name: "hash11",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "array",
        type: "uint256[5]",
      },
    ],
    name: "hash5",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_right",
        type: "uint256",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_leaf",
        type: "uint256",
      },
    ],
    name: "insertLeaf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rootHistory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006023553480156200001657600080fd5b5060405162001e2738038062001e27833981810160405260608110156200003c57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050506000620000736200040060201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35060008360ff161180156200012c5750602060ff168360ff1611155b6040518060400160405280600381526020017f4530330000000000000000000000000000000000000000000000000000000000815250906200020c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620001d0578082015181840152602081019050620001b3565b50505050905090810190601f168015620001fe5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5080156200035257620002246200040860201b60201c565b60016000602181106200023357fe5b015482146040518060400160405280600381526020017f45303400000000000000000000000000000000000000000000000000000000008152509062000317576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620002db578082015181840152602081019050620002be565b50505050905090810190601f168015620003095780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082602260006101000a81548160ff021916908360ff16021790555060018360ff16602181106200034457fe5b0154602481905550620003f7565b82602260006101000a81548160ff021916908360ff1602179055508160016000602181106200037d57fe5b018190555060008290506000600190505b8460ff168160ff161015620003dc576000620003b1838462000ade60201b60201c565b90508060018360ff1660218110620003c557fe5b01819055508092505080806001019150506200038e565b50620003ef818262000ade60201b60201c565b602481905550505b50505062000bfc565b600033905090565b7f12817f4161f2f5ded33f26c55735a77e80e4f8975483c8c2704745128417f71160016000602181106200043857fe5b01819055507f1eb18f95e1d37fef1d31c1f2eabf0fb521bf8d635393897e5c3a0b2acd514d7a600180602181106200046c57fe5b01819055507f2216e9dc1b620318a314c751de830a83ce68d18e2391ddebce7456cb9acf7c686001600260218110620004a157fe5b01819055507f0df8027f4112bc471271b7549566c2a0a96b358af40756eaa0bd75a64ae6855c6001600360218110620004d657fe5b01819055507f2748e20e9d1016edcd8d774aec93c4a3af73c66fc45ef61e242596b6be3d58a760016004602181106200050b57fe5b01819055507f02475737003fd1cf99a880f2701571435d5681546082dfebb30774a2006cd8e160016005602181106200054057fe5b01819055507f056e848f4a8eb8f3cd39238ac69b955f215234b82c5ddf26a990799999c8153060016006602181106200057557fe5b01819055507f13470e61f47a09322f143fa1ec2a72eaf29a78ab2a60031a020368716b6d533c6001600760218110620005aa57fe5b01819055507f0374874d20fb109b0261c9935b0124c9cd3ab53a2cc150e4dc059b6d3eb8bbc96001600860218110620005df57fe5b01819055507f05bc2adabe2d2493a75560d1c5d09462debc3ecc208add0badac60671f04aa1460016009602181106200061457fe5b01819055507f107b2f1361ee61cce04031dc2bdd97ea530ab9807ac595533d5b1cbc8cecaedf6001600a602181106200064957fe5b01819055507f0c76306e0bea386c3548577b203c01ba8b87092d256ad0be4b131c2cef2f0a5d6001600b602181106200067e57fe5b01819055507f0ebe0f842596c4b3106b71da89fe589e81e88fbb8a218acc48262e3a5154d4426001600c60218110620006b357fe5b01819055507f19f194c00e265dea222fb82d302c80dd7e78a563e822ebc7921a685e82a0623b6001600d60218110620006e857fe5b01819055507f1dc3efd89743655708851b437c7a16fcd84722dd7b3549154bf0dd56b52ee82a6001600e602181106200071d57fe5b01819055507f106c70c243d8057c7fcd6eff2bd6c2c68b609d70d9e112442dba86a9261b97f46001600f602181106200075257fe5b01819055507f071e96e5a4ac6f8f5bceea3640debd17352342762a2ee143f46f330889dbbdc060016010602181106200078757fe5b01819055507f0c9b62b5319bbbf6db8b4d5309fb712ce8e67413515bf81012c9d1e75830b1fc6001601160218110620007bc57fe5b01819055507f27ea7eb1fddc5e124ed14f68c10ab01e9b5054eea0bbe1747d4d94c8dd19d2176001601260218110620007f157fe5b01819055507f2308729960e09b7300dd3f967579c3dd44f76701c23e4715b2aca962737a3ecd60016013602181106200082657fe5b01819055507f230e84ef9a9351d5e93eaeef01bbc92888acd2de374ce85e53033a886b9872f960016014602181106200085b57fe5b01819055507f257816a72cddcc48d35e54f6c5dc4fd48b64cf19b0679f0928f196bce392e04460016015602181106200089057fe5b01819055507f09bfe62706cd0490774111afa85d00d2003d5278ee878824e16b5ee727c4a2c46001601660218110620008c557fe5b01819055507f08d7e0972150f8774e2307a95a90306ef29b50aeb68732f75dea05dcf49f63226001601760218110620008fa57fe5b01819055507f0d10fd66038935f30ada10184cd823c396873043f4c62d2399b10fe93b77750060016018602181106200092f57fe5b01819055507f126a7e69684fc2886a5e4ec1d843edfb04bbde55e7210f9985a802c38afe872360016019602181106200096457fe5b01819055507f300bbb79c031501d591b4a705859620ef3b0242c5b56083313932e66ec30319b6001601a602181106200099957fe5b01819055507f1ec0181253bf696878c6fdd4f8c041ba06930993e5b3a8d9e89bcfe070f0bc276001601b60218110620009ce57fe5b01819055507f06126523f9ee30de0c1c00184beaef62430fdd9a5fa3efcee5c908dc0dda25386001601c6021811062000a0357fe5b01819055507f08e5a4b474e905d4cddc0722428448f3dc9080de59e850efb0c24f66a52b3dfb6001601d6021811062000a3857fe5b01819055507f1dc520e82d99f72cbe6f0e38d5434b2710c9da87ee587794aa3a04ee348b84326001601e6021811062000a6d57fe5b01819055507f0434426018cdc007b25a149d486893ec448bb0b610080c06d6f8b18cb01a4a7a6001601f6021811062000aa257fe5b01819055507f079d4f407c3258fca701c5b7eb8b334b1beb5c178daaa9088cd11b11b1461ae6600160206021811062000ad757fe5b0181905550565b600062000aea62000bda565b838160006002811062000af957fe5b602002018181525050828160016002811062000b1157fe5b60200201818152505073__$1ca93bdf972a371ade5aef0d3bede02ce8$__6329a5f2f6826040518263ffffffff1660e01b81526004018082600260200280838360005b8381101562000b7157808201518184015260208101905062000b54565b5050505090500191505060206040518083038186803b15801562000b9457600080fd5b505af415801562000ba9573d6000803e3d6000fd5b505050506040513d602081101562000bc057600080fd5b810190808051906020019092919050505091505092915050565b6040518060400160405280600290602082028036833780820191505090505090565b61121b8062000c0c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80639cfced97116100665780639cfced97146101ee578063b720243414610267578063ebf0c717146102a9578063f1c621ee146102c7578063f2fde38b1461030b57610093565b80635bb9399514610098578063715018a6146100e45780638a1a52d2146100ee5780638da5cb5b146101ba575b600080fd5b6100ce600480360360408110156100ae57600080fd5b81019080803590602001909291908035906020019092919050505061034f565b6040518082815260200191505060405180910390f35b6100ec610442565b005b6101a46004803603602081101561010457600080fd5b810190808035906020019064010000000081111561012157600080fd5b82018360208201111561013357600080fd5b8035906020019184602083028401116401000000008311171561015557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506105c8565b6040518082815260200191505060405180910390f35b6101c2610a64565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610251600480360360a081101561020457600080fd5b810190808060a001906005806020026040519081016040528092919082600560200280828437600081840152601f19601f8201169050808301925050505050509192919290505050610a8d565b6040518082815260200191505060405180910390f35b6102936004803603602081101561027d57600080fd5b8101908080359060200190929190505050610b48565b6040518082815260200191505060405180910390f35b6102b1610f42565b6040518082815260200191505060405180910390f35b6102f3600480360360208110156102dd57600080fd5b8101908080359060200190929190505050610f48565b60405180821515815260200191505060405180910390f35b61034d6004803603602081101561032157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f68565b005b600061035961117b565b838160006002811061036757fe5b602002018181525050828160016002811061037e57fe5b60200201818152505073__$1ca93bdf972a371ade5aef0d3bede02ce8$__6329a5f2f6826040518263ffffffff1660e01b81526004018082600260200280838360005b838110156103dc5780820151818401526020810190506103c1565b5050505090500191505060206040518083038186803b1580156103fe57600080fd5b505af4158015610412573d6000803e3d6000fd5b505050506040513d602081101561042857600080fd5b810190808051906020019092919050505091505092915050565b61044a611173565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461050a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006060600b67ffffffffffffffff811180156105e457600080fd5b506040519080825280602002602001820160405280156106135781602001602082028036833780820191505090505b50905061061e61119d565b61062661119d565b60005b855181101561066b5785818151811061063e57fe5b602002602001015184828151811061065257fe5b6020026020010181815250508080600101915050610629565b506000855190505b600b8110156106a357600084828151811061068a57fe5b6020026020010181815250508080600101915050610673565b5060005b6005811015610712578381815181106106bc57fe5b60200260200101518382600581106106d057fe5b6020020181815250508360058201815181106106e857fe5b60200260200101518282600581106106fc57fe5b60200201818152505080806001019150506106a7565b5061071b61117b565b73__$12b92d1cbc3f374ffe86947c65032e94dd$__634937a258846040518263ffffffff1660e01b81526004018082600560200280838360005b83811015610770578082015181840152602081019050610755565b5050505090500191505060206040518083038186803b15801561079257600080fd5b505af41580156107a6573d6000803e3d6000fd5b505050506040513d60208110156107bc57600080fd5b8101908080519060200190929190505050816000600281106107da57fe5b60200201818152505073__$12b92d1cbc3f374ffe86947c65032e94dd$__634937a258836040518263ffffffff1660e01b81526004018082600560200280838360005b8381101561083857808201518184015260208101905061081d565b5050505090500191505060206040518083038186803b15801561085a57600080fd5b505af415801561086e573d6000803e3d6000fd5b505050506040513d602081101561088457600080fd5b8101908080519060200190929190505050816001600281106108a257fe5b6020020181815250506108b361117b565b73__$1ca93bdf972a371ade5aef0d3bede02ce8$__6329a5f2f6836040518263ffffffff1660e01b81526004018082600260200280838360005b838110156109085780820151818401526020810190506108ed565b5050505090500191505060206040518083038186803b15801561092a57600080fd5b505af415801561093e573d6000803e3d6000fd5b505050506040513d602081101561095457600080fd5b81019080805190602001909291905050508160006002811061097257fe5b60200201818152505084600a8151811061098857fe5b60200260200101518160016002811061099d57fe5b60200201818152505073__$1ca93bdf972a371ade5aef0d3bede02ce8$__6329a5f2f6826040518263ffffffff1660e01b81526004018082600260200280838360005b838110156109fb5780820151818401526020810190506109e0565b5050505090500191505060206040518083038186803b158015610a1d57600080fd5b505af4158015610a31573d6000803e3d6000fd5b505050506040513d6020811015610a4757600080fd5b810190808051906020019092919050505095505050505050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073__$12b92d1cbc3f374ffe86947c65032e94dd$__634937a258836040518263ffffffff1660e01b81526004018082600560200280838360005b83811015610ae4578082015181840152602081019050610ac9565b5050505090500191505060206040518083038186803b158015610b0657600080fd5b505af4158015610b1a573d6000803e3d6000fd5b505050506040513d6020811015610b3057600080fd5b81019080805190602001909291905050509050919050565b6000610b52611173565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c12576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000182106040518060400160405280600381526020017f453031000000000000000000000000000000000000000000000000000000000081525090610d11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610cd6578082015181840152602081019050610cbb565b50505050905090810190601f168015610d035780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600060235490506000602260009054906101000a900460ff1660ff1690508060020a82106040518060400160405280600381526020017f453032000000000000000000000000000000000000000000000000000000000081525090610e12576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610dd7578082015181840152602081019050610dbc565b50505050905090810190601f168015610e045780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600084905060008060005b602260009054906101000a900460ff1660ff168160ff161015610eb857600060028781610e4757fe5b061415610e805783925060018160ff1660218110610e6157fe5b015491508360258260ff1660208110610e7657fe5b0181905550610e98565b60258160ff1660208110610e9057fe5b015492508391505b610ea2838361034f565b9350600186901c95508080600101915050610e1e565b5082602481905550600160456000602454815260200190815260200160002060006101000a81548160ff02191690831515021790555060006023549050600160236000828254019250508190555080887fe6f49fa84abd31919f446b22a52bb3ceae774b4b87f062f022fec45c46f4f45860405160405180910390a3859650505050505050919050565b60245481565b60456020528060005260406000206000915054906101000a900460ff1681565b610f70611173565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611030576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806111c06026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6040518060400160405280600290602082028036833780820191505090505090565b6040518060a0016040528060059060208202803683378082019150509050509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220f5b5565c75665ada347937e0fa2d19a366794e320528f1b5c468f33545a78d8164736f6c634300060c0033";

export class IncrementalMerkleTree__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: IncrementalMerkleTreeLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      IncrementalMerkleTree__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: IncrementalMerkleTreeLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1ca93bdf972a371ade5aef0d3bede02ce8\\$__", "g"),
      linkLibraryAddresses["maci-contracts/sol/Poseidon.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$12b92d1cbc3f374ffe86947c65032e94dd\\$__", "g"),
      linkLibraryAddresses["maci-contracts/sol/Poseidon.sol:PoseidonT6"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _treeLevels: BigNumberish,
    _zeroValue: BigNumberish,
    _isPreCalc: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IncrementalMerkleTree> {
    return super.deploy(
      _treeLevels,
      _zeroValue,
      _isPreCalc,
      overrides || {}
    ) as Promise<IncrementalMerkleTree>;
  }
  getDeployTransaction(
    _treeLevels: BigNumberish,
    _zeroValue: BigNumberish,
    _isPreCalc: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treeLevels,
      _zeroValue,
      _isPreCalc,
      overrides || {}
    );
  }
  attach(address: string): IncrementalMerkleTree {
    return super.attach(address) as IncrementalMerkleTree;
  }
  connect(signer: Signer): IncrementalMerkleTree__factory {
    return super.connect(signer) as IncrementalMerkleTree__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncrementalMerkleTreeInterface {
    return new utils.Interface(_abi) as IncrementalMerkleTreeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncrementalMerkleTree {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IncrementalMerkleTree;
  }
}

export interface IncrementalMerkleTreeLibraryAddresses {
  ["maci-contracts/sol/Poseidon.sol:PoseidonT3"]: string;
  ["maci-contracts/sol/Poseidon.sol:PoseidonT6"]: string;
}
