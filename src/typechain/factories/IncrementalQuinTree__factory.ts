/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  IncrementalQuinTree,
  IncrementalQuinTreeInterface,
} from "../IncrementalQuinTree";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_treeLevels",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_zeroValue",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "leaf",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "leafIndex",
        type: "uint256",
      },
    ],
    name: "LeafInsertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "array",
        type: "uint256[]",
      },
    ],
    name: "hash11",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "array",
        type: "uint256[5]",
      },
    ],
    name: "hash5",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_right",
        type: "uint256",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_leaf",
        type: "uint256",
      },
    ],
    name: "insertLeaf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rootHistory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006001553480156200001657600080fd5b50604051620015b5380380620015b5833981810160405260408110156200003c57600080fd5b8101908080519060200190929190805190602001909291905050506000620000696200023f60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35060008260ff16118015620001225750602060ff168260ff1611155b62000179576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806200157c6039913960400191505060405180910390fd5b81600060146101000a81548160ff021916908360ff1602179055506000819050620001a362000307565b60005b8460ff168160ff1610156200022d5760005b600560ff168160ff161015620001f05783838260ff1660058110620001d957fe5b6020020181815250508080600101915050620001b8565b5082600360008360ff168152602001908152602001600020819055506200021d826200024760201b60201c565b92508080600101915050620001a6565b50816002819055505050505062000329565b600033905090565b600073__$12b92d1cbc3f374ffe86947c65032e94dd$__634937a258836040518263ffffffff1660e01b81526004018082600560200280838360005b83811015620002a057808201518184015260208101905062000283565b5050505090500191505060206040518083038186803b158015620002c357600080fd5b505af4158015620002d8573d6000803e3d6000fd5b505050506040513d6020811015620002ef57600080fd5b81019080805190602001909291905050509050919050565b6040518060a00160405280600590602082028036833780820191505090505090565b61124380620003396000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80639cfced97116100665780639cfced97146101ee578063b720243414610267578063ebf0c717146102a9578063f1c621ee146102c7578063f2fde38b1461030b57610093565b80635bb9399514610098578063715018a6146100e45780638a1a52d2146100ee5780638da5cb5b146101ba575b600080fd5b6100ce600480360360408110156100ae57600080fd5b81019080803590602001909291908035906020019092919050505061034f565b6040518082815260200191505060405180910390f35b6100ec610442565b005b6101a46004803603602081101561010457600080fd5b810190808035906020019064010000000081111561012157600080fd5b82018360208201111561013357600080fd5b8035906020019184602083028401116401000000008311171561015557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506105c8565b6040518082815260200191505060405180910390f35b6101c2610a64565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610251600480360360a081101561020457600080fd5b810190808060a001906005806020026040519081016040528092919082600560200280828437600081840152601f19601f8201169050808301925050505050509192919290505050610a8d565b6040518082815260200191505060405180910390f35b6102936004803603602081101561027d57600080fd5b8101908080359060200190929190505050610b48565b6040518082815260200191505060405180910390f35b6102b1610f04565b6040518082815260200191505060405180910390f35b6102f3600480360360208110156102dd57600080fd5b8101908080359060200190929190505050610f0a565b60405180821515815260200191505060405180910390f35b61034d6004803603602081101561032157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f2a565b005b600061035961113d565b838160006002811061036757fe5b602002018181525050828160016002811061037e57fe5b60200201818152505073__$1ca93bdf972a371ade5aef0d3bede02ce8$__6329a5f2f6826040518263ffffffff1660e01b81526004018082600260200280838360005b838110156103dc5780820151818401526020810190506103c1565b5050505090500191505060206040518083038186803b1580156103fe57600080fd5b505af4158015610412573d6000803e3d6000fd5b505050506040513d602081101561042857600080fd5b810190808051906020019092919050505091505092915050565b61044a611135565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461050a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006060600b67ffffffffffffffff811180156105e457600080fd5b506040519080825280602002602001820160405280156106135781602001602082028036833780820191505090505b50905061061e61115f565b61062661115f565b60005b855181101561066b5785818151811061063e57fe5b602002602001015184828151811061065257fe5b6020026020010181815250508080600101915050610629565b506000855190505b600b8110156106a357600084828151811061068a57fe5b6020026020010181815250508080600101915050610673565b5060005b6005811015610712578381815181106106bc57fe5b60200260200101518382600581106106d057fe5b6020020181815250508360058201815181106106e857fe5b60200260200101518282600581106106fc57fe5b60200201818152505080806001019150506106a7565b5061071b61113d565b73__$12b92d1cbc3f374ffe86947c65032e94dd$__634937a258846040518263ffffffff1660e01b81526004018082600560200280838360005b83811015610770578082015181840152602081019050610755565b5050505090500191505060206040518083038186803b15801561079257600080fd5b505af41580156107a6573d6000803e3d6000fd5b505050506040513d60208110156107bc57600080fd5b8101908080519060200190929190505050816000600281106107da57fe5b60200201818152505073__$12b92d1cbc3f374ffe86947c65032e94dd$__634937a258836040518263ffffffff1660e01b81526004018082600560200280838360005b8381101561083857808201518184015260208101905061081d565b5050505090500191505060206040518083038186803b15801561085a57600080fd5b505af415801561086e573d6000803e3d6000fd5b505050506040513d602081101561088457600080fd5b8101908080519060200190929190505050816001600281106108a257fe5b6020020181815250506108b361113d565b73__$1ca93bdf972a371ade5aef0d3bede02ce8$__6329a5f2f6836040518263ffffffff1660e01b81526004018082600260200280838360005b838110156109085780820151818401526020810190506108ed565b5050505090500191505060206040518083038186803b15801561092a57600080fd5b505af415801561093e573d6000803e3d6000fd5b505050506040513d602081101561095457600080fd5b81019080805190602001909291905050508160006002811061097257fe5b60200201818152505084600a8151811061098857fe5b60200260200101518160016002811061099d57fe5b60200201818152505073__$1ca93bdf972a371ade5aef0d3bede02ce8$__6329a5f2f6826040518263ffffffff1660e01b81526004018082600260200280838360005b838110156109fb5780820151818401526020810190506109e0565b5050505090500191505060206040518083038186803b158015610a1d57600080fd5b505af4158015610a31573d6000803e3d6000fd5b505050506040513d6020811015610a4757600080fd5b810190808051906020019092919050505095505050505050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073__$12b92d1cbc3f374ffe86947c65032e94dd$__634937a258836040518263ffffffff1660e01b81526004018082600560200280838360005b83811015610ae4578082015181840152602081019050610ac9565b5050505090500191505060206040518083038186803b158015610b0657600080fd5b505af4158015610b1a573d6000803e3d6000fd5b505050506040513d6020811015610b3057600080fd5b81019080805190602001909291905050509050919050565b6000610b52611135565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c12576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018210610c8a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260458152602001806111a86045913960600191505060405180910390fd5b600060149054906101000a900460ff1660ff16600560ff160a60015410610cfc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806111ed6021913960400191505060405180910390fd5b600060015490506000839050610d1061115f565b6000600560ff168481610d1f57fe5b06905060005b600060149054906101000a900460ff1660ff168160ff161015610e7c576000821415610db5576000600190505b600560ff168160ff161015610db357600360008360ff16815260200190815260200160002054600460008460ff16815260200190815260200160002060008360ff168152602001908152602001600020819055508080600101915050610d52565b505b83600460008360ff16815260200190815260200160002060008481526020019081526020016000208190555060005b600560ff168160ff161015610e4357600460008360ff16815260200190815260200160002060008260ff16815260200190815260200160002054848260ff1660058110610e2d57fe5b6020020181815250508080600101915050610de4565b50610e4d83610a8d565b9350600560ff168581610e5c57fe5b049450600560ff168581610e6c57fe5b0691508080600101915050610d25565b5082600281905550600160056000600254815260200190815260200160002060006101000a81548160ff021916908315150217905550600060015490506001806000828254019250508190555080877fe6f49fa84abd31919f446b22a52bb3ceae774b4b87f062f022fec45c46f4f45860405160405180910390a38495505050505050919050565b60025481565b60056020528060005260406000206000915054906101000a900460ff1681565b610f32611135565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ff2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611078576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806111826026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6040518060400160405280600290602082028036833780820191505090505090565b6040518060a0016040528060059060208202803683378082019150509050509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e6372656d656e74616c5175696e547265653a20696e736572744c65616620617267756d656e74206d757374206265203c20534e41524b5f5343414c41525f4649454c44496e6372656d656e74616c5175696e547265653a20747265652069732066756c6ca2646970667358221220002b6652bb2be0f1ba836be9f933a6d746e665c1d59625ea881e6ae2cbcb116864736f6c634300060c0033496e6372656d656e74616c5175696e547265653a205f747265654c6576656c73206d757374206265206265747765656e203020616e64203333";

export class IncrementalQuinTree__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: IncrementalQuinTreeLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      IncrementalQuinTree__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: IncrementalQuinTreeLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$12b92d1cbc3f374ffe86947c65032e94dd\\$__", "g"),
      linkLibraryAddresses["maci-contracts/sol/Poseidon.sol:PoseidonT6"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1ca93bdf972a371ade5aef0d3bede02ce8\\$__", "g"),
      linkLibraryAddresses["maci-contracts/sol/Poseidon.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _treeLevels: BigNumberish,
    _zeroValue: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IncrementalQuinTree> {
    return super.deploy(
      _treeLevels,
      _zeroValue,
      overrides || {}
    ) as Promise<IncrementalQuinTree>;
  }
  getDeployTransaction(
    _treeLevels: BigNumberish,
    _zeroValue: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treeLevels, _zeroValue, overrides || {});
  }
  attach(address: string): IncrementalQuinTree {
    return super.attach(address) as IncrementalQuinTree;
  }
  connect(signer: Signer): IncrementalQuinTree__factory {
    return super.connect(signer) as IncrementalQuinTree__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncrementalQuinTreeInterface {
    return new utils.Interface(_abi) as IncrementalQuinTreeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncrementalQuinTree {
    return new Contract(address, _abi, signerOrProvider) as IncrementalQuinTree;
  }
}

export interface IncrementalQuinTreeLibraryAddresses {
  ["maci-contracts/sol/Poseidon.sol:PoseidonT6"]: string;
  ["maci-contracts/sol/Poseidon.sol:PoseidonT3"]: string;
}
